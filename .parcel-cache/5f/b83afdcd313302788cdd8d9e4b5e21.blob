var helpers = require("../../../../../../../.nvm/versions/node/v14.16.1/lib/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _s = $RefreshSig$();
// Create function component
function LoginView(props) {
    _s();
    // Use destructuring to set initial values for username and password and name functions to update values
    const [username, setUsername] = _react.useState('');
    const [password, setPassword] = _react.useState('');
    /* Function to handle submission of form data. Note that this will be updated to send a request
for proper authentication of credentials in a future exercise */ const handleSubmit = ()=>{
        e.preventDefault();
        console.log(username, password);
        /* We will give the component a property called onLoggedIn within MainView. We will then call it here
passing the username as the parameter. This will simulate logging on while we work on styling */ props.onLoggedIn(username);
    };
    // Return statement
    return(/*#__PURE__*/ _reactDefault.default.createElement("form", {
        __source: {
            fileName: "/Users/pennygraham/Desktop/Web development/Projects/myFlix-client/src/components/login-view/login-view.jsx",
            lineNumber: 24
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement("label", {
        __source: {
            fileName: "/Users/pennygraham/Desktop/Web development/Projects/myFlix-client/src/components/login-view/login-view.jsx",
            lineNumber: 25
        },
        __self: this
    }, "Username:", /*#__PURE__*/ _reactDefault.default.createElement("input", {
        type: "text",
        value: username,
        onChange: (e)=>setUsername(e.target.value)
        ,
        __source: {
            fileName: "/Users/pennygraham/Desktop/Web development/Projects/myFlix-client/src/components/login-view/login-view.jsx",
            lineNumber: 26
        },
        __self: this
    })), /*#__PURE__*/ _reactDefault.default.createElement("label", {
        __source: {
            fileName: "/Users/pennygraham/Desktop/Web development/Projects/myFlix-client/src/components/login-view/login-view.jsx",
            lineNumber: 28
        },
        __self: this
    }, "Password:", /*#__PURE__*/ _reactDefault.default.createElement("input", {
        type: "text",
        value: password,
        onChange: (e)=>setPassword(e.target.value)
        ,
        __source: {
            fileName: "/Users/pennygraham/Desktop/Web development/Projects/myFlix-client/src/components/login-view/login-view.jsx",
            lineNumber: 29
        },
        __self: this
    })), /*#__PURE__*/ _reactDefault.default.createElement("button", {
        type: "submit",
        onClick: handleSubmit,
        __source: {
            fileName: "/Users/pennygraham/Desktop/Web development/Projects/myFlix-client/src/components/login-view/login-view.jsx",
            lineNumber: 31
        },
        __self: this
    }, "Submit")));
}
_s(LoginView, "wuQOK7xaXdVz4RMrZQhWbI751Oc=");
_c = LoginView;
exports.default = LoginView;
var _c;
$RefreshReg$(_c, "LoginView");

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
var helpers = require("../../../../../../../.nvm/versions/node/v14.16.1/lib/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _registrationView = require("../registration-view/registration-view");
var _registrationViewDefault = parcelHelpers.interopDefault(_registrationView);
var _loginView = require("../login-view/login-view");
var _loginViewDefault = parcelHelpers.interopDefault(_loginView);
var _movieCard = require("../movie-card/movie-card");
var _movieCardDefault = parcelHelpers.interopDefault(_movieCard);
var _movieView = require("../movie-view/movie-view");
var _movieViewDefault = parcelHelpers.interopDefault(_movieView);
class MainView extends _reactDefault.default.Component {
    constructor(){
        super();
        this.state = {
            movies: [],
            selectedMovie: null,
            registeredUser: null,
            user: null
        };
    }
    componentDidMount() {
        _axiosDefault.default.get('https://intense-depths-38257.herokuapp.com/movies').then((res)=>{
            this.setState({
                movies: res.data
            });
        }).catch((err)=>{
            console.log(err);
        });
    }
    setSelectedMovie(selectedMovieData) {
        this.setState({
            selectedMovie: selectedMovieData
        });
    }
    onRegistered(registered) {
        this.setState({
            registeredUser: registered
        });
    }
    onLoggedIn(username) {
        this.setState({
            user: username
        });
    }
    render() {
        const { movies , selectedMovie , user , registeredUser  } = this.state;
        if (!registeredUser) return(/*#__PURE__*/ _reactDefault.default.createElement(_registrationViewDefault.default, {
            onRegistered: (registered)=>this.onRegistered(registered)
            ,
            __source: {
                fileName: "/Users/pennygraham/Desktop/Web development/Projects/myFlix-client/src/components/main-view/main-view.jsx",
                lineNumber: 44
            },
            __self: this
        }));
        if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_loginViewDefault.default, {
            onLoggedIn: (username)=>this.onLoggedIn(username)
            ,
            __source: {
                fileName: "/Users/pennygraham/Desktop/Web development/Projects/myFlix-client/src/components/main-view/main-view.jsx",
                lineNumber: 45
            },
            __self: this
        }));
        if (movies.length === 0) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: "main-view",
            __source: {
                fileName: "/Users/pennygraham/Desktop/Web development/Projects/myFlix-client/src/components/main-view/main-view.jsx",
                lineNumber: 46
            },
            __self: this
        }));
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: "main-view",
            __source: {
                fileName: "/Users/pennygraham/Desktop/Web development/Projects/myFlix-client/src/components/main-view/main-view.jsx",
                lineNumber: 48
            },
            __self: this
        }, selectedMovie ? /*#__PURE__*/ _reactDefault.default.createElement(_movieViewDefault.default, {
            movieData: selectedMovie,
            onBackClick: (movieData)=>this.setSelectedMovie(movieData)
            ,
            __source: {
                fileName: "/Users/pennygraham/Desktop/Web development/Projects/myFlix-client/src/components/main-view/main-view.jsx",
                lineNumber: 50
            },
            __self: this
        }) : movies.map((movie)=>/*#__PURE__*/ _reactDefault.default.createElement(_movieCardDefault.default, {
                key: movie._id,
                movieData: movie,
                onMovieClick: (movieData)=>this.setSelectedMovie(movieData)
                ,
                __source: {
                    fileName: "/Users/pennygraham/Desktop/Web development/Projects/myFlix-client/src/components/main-view/main-view.jsx",
                    lineNumber: 53
                },
                __self: this
            })
        )));
    }
}
exports.default = MainView;

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}